@model SampleProject_BusinessEntities.Users
@{
    ViewBag.Title = "EditUser";
}

<h2>EditUser</h2>
@using (Html.BeginForm("EditUser", "Shared", new { @id = "frmEdit" }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ID)
    @Html.HiddenFor(m => m.User_ID)

    <div class="form-group">
        @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control", @id = "txtEmailID" } })
            @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "txtName" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control", @id = "txtMobile" } })
            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Gender", new List<SelectListItem>
           {new SelectListItem { Text = "Male",Value="True", Selected= true},
            new SelectListItem {  Text = "Female",Value="False"}}, "Select Gender", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @id = "txtDob" } })
            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
        </div>
    </div>

    if (Session["Administrator"] != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RoleID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RoleID, @ViewBag.Roles as SelectList, "Select Role", new { @class = "form-control", @id = "ddlRole" })
                @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(m => m.RoleID)
    }

    if (Session["Employee"] != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.Password)
    }

    if (Session["Supervisor"] != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.Password)
    }

    if (Session["Administrator"] != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status, new List<SelectListItem>
           {new SelectListItem { Text = "Active",Value="True"},
            new SelectListItem {  Text = "InActive",Value="False"}}, "Select Status", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.Status)
    }

    <div class="form-group">
        @Html.LabelFor(model => model.StateID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.StateID, @ViewBag.States as SelectList, "Select State", new { @class = "form-control", @id = "ddlState" })
            @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CityID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CityID, @ViewBag.Cities as SelectList, "Select city", new { @class = "form-control", @id = "ddlCity" })
            @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="File" id="File" class="btn btn-default" />
            @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        <span id="sucMsg" class="success"></span>
        <span id="Error" class="text-danger"></span>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="btnSubmit" value="Save" class="btn btn-default" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10" style="color:green">
            @ViewBag.Message
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/jscript">

        $('#ddlState').change(function () {
            // alert();
            $.getJSON('/Shared/CityList/' + $('#ddlState').val(), function (data) {
                var items = '<option>Select a City</option>';
                $.each(data, function (i, city) {
                    //alert(city);
                    items += "<option value='" + city.Value + "'>" + city.Text + "</option>";
                });
                $('#ddlCity').html(items);

            });
        });
        $("#DOB").datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: '-115:+1M',
            maxDate: new Date(),
        }).on('change', function () {
            var selYear = new Date($(this).val()).getFullYear(); // get the full year of selected date
            var currYear = new Date().getFullYear(); // get the current year
            //alert(currYear - selYear);
            if ((currYear - selYear) < 20) {
                //alert("error");
                $("#display_error").show();
                $("#display_error").text('please select valid date');
            }
            else {
                $("#display_error").hide();
            }
        });

        $('#btnSubmit').click(function () {
            //ajax for post data
            alert();
            $.ajax({
                url: "@Url.Action("EditUser", "Shared")",
                type: "post",
                data: $('frmEdit').serialize(),
                datatype: JSON,
                success: function (result) {
                    if (result == 'sucMsg') {
                        $('#sucMsg').text('sucessfully updated')
                    }
                    else if (result == 'Error') {
                        $('#Error').text('Failed')
                    }
                }
            });
        });
    </script>
}
